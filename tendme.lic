=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#tendme
=end

custom_require.call(%w[common common-healing events])

class TendMe

  def initialize
    arg_definitions = [
      [
        { name: 'train', regex: /train/i, optional: true, description: 'unwrap and rebind wounds for optimum learning' },
        { name: 'monitor', regex: /monitor/i, optional: true, description: 'run in background to keep bleeders tended' }
      ]
    ]
    args = parse_args(arg_definitions)
    waitrt? while bind_open_wounds?
    monitor_health(args.train) if args.monitor
  end

  def bind_open_wounds?
    health_data = DRCH.check_health
    wounds = (
      health_data['lodged'].values.flatten +
      health_data['parasites'].values.flatten +
      health_data['bleeders'].values.flatten
    )
    wounds
      .reject { |wound| wound.internal? || wound.bleeding_rate =~ /tended|clotted/ }
      .any? { |wound| DRCH.bind_wound(wound.body_part) }
  end

  # Monitor for wounds to begin bleeding again then tend them.
  def monitor_health(train)
    Flags.add('tendme-bind-lodged', /You feel a slight pain from the (?<item>.*) lodged in your (?<body_part>.*)\./)
    Flags.add('tendme-bind-wound', /The bandages binding your (?<body_part>.*) (become|come|soak)/)
    Flags.add('tendme-rewrap-wound', /You feel like now might be a good time to change the bandages on your (?<body_part>.*)\./)

    loop do
      pause 0.5
      body_part = nil
      # One or more active bleeders, tend them.
      if Flags['tendme-bind-wound']
        body_part = get_body_part_from_flag('tendme-bind-wound')
      end
      # If training, you can rewrap wound for more experience.
      if Flags['tendme-rewrap-wound'] && train
        body_part = get_body_part_from_flag('tendme-rewrap-wound')
        DRCH.unwrap_wound(body_part)
        # Unwrapping a wound will cause a message that trips our flag.
        # Clear the flag so we don't try to double tend a wound.
        # If the flag was already tripped for a different bleeder
        # then that'll get taken cared of when we bind all open wounds.
        Flags.reset('tendme-bind-wound')
      end
      # Detected lodged ammo or parasites, tend them out.
      if Flags['tendme-bind-lodged']
        body_part = get_body_part_from_flag('tendme-bind-lodged')
      end
      if body_part
        DRCH.bind_wound(body_part)
        bind_open_wounds?
      end
    end
  end

  def get_body_part_from_flag(flag)
    body_part = Flags[flag][:body_part]
    Flags.reset(flag)
    return body_part
  end

end

before_dying do
  Flags.delete('tendme-bind-wound')
  Flags.delete('tendme-rewrap-wound')
  Flags.delete('tendme-bind-lodged')
end

TendMe.new
