=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#outdoorsmanship
=end

custom_require.call(%w[common common-items drinfomon common-arcana events common-travel])

class Outdoorsmanship
  include DRC
  include DRCI
  include DRCA

  def initialize
    arg_definitions = [
      [
        { name: 'perception', regex: /perception/, optional: true, description: 'Optional: Check Perception skill in place of Outdoorsmanship' },
        { name: 'mindstates', regex: /^\d+/, optional: true, description: 'Optional: Number of mindstates or collection attempts to perform before exiting. Defaults to 3' },
        { name: 'room', regex: /(room=(\d+))/, optional: true, description: 'Optional: Specific room to forage in - primarily used to locate a trash bin. Syntax:  room=1234'  }, 
        { name: 'forage', regex: /forage/, optional: true, description: 'Optional: Default method is collect, specify forage to override. Forage is best used with a trash bin.' },
        { name: 'collect_item', regex: /\w+/i, optional: true, description: 'Optional: Item to collect. Will use forage_item if not set. Wrap "multiple words" in double quotes.' }
        
      ]
    ]
    args = parse_args(arg_definitions)

    @settings = get_settings

    @training_spells = @settings.crafting_training_spells
    @targetxp = 4
    @targetxp = args.mindstates.to_i if args.mindstates
    @outdoors_room = @settings.outdoors_room
    if args.room
      room = args.room.split('=')[1]
      @outdoors_room = room
    end

    @train_method = args.forage || @settings.outdoors_method

    @forage_item = if args.collect_item
                     args.collect_item
                   elsif @settings.forage_item
                     @settings.forage_item
                   elsif DRSkill.getrank('Outdoorsmanship') < 20
                     'rock'
                   end

    if args.perception
      @skill_name = 'Perception'
    else
      @skill_name = 'Outdoorsmanship'
    end

    start_exp = DRSkill.getxp(@skill_name)
    @end_exp = [start_exp + @targetxp, 34].min

    DRCT.walk_to(@outdoors_room) if @outdoors_room
    train_outdoorsmanship
  end

  def train_outdoorsmanship
    attempt = 0 # Failsafe counter to prevent an infinite loop if item isn't collectable in the room
    while (DRSkill.getxp(@skill_name) < @end_exp) && (attempt < @targetxp)
      if DRSkill.getrank('Outdoorsmanship') < 20 || @train_method == 'forage' 
        crafting_magic_routine(@settings)
        forage?(@forage_item)
        dispose_trash(@forage_item)
      else
        item = @forage_item
        crafting_magic_routine(@settings)
        collect(item)
        waitrt?
        kick_pile? unless kick_pile?("#{item}s")
      end
      attempt += 1
    end
    magic_cleanup
  end

  def magic_cleanup
    return if @training_spells.empty?

    bput('release spell', 'You let your concentration lapse', "You aren't preparing a spell")
    bput('release mana', 'You release all', "You aren't harnessing any mana")
    # Do not release symbiosis - see https://github.com/rpherbig/dr-scripts/issues/3141
  end
end

# Call this last to avoid the need for forward declarations
Outdoorsmanship.new
