=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#multi
=end

custom_require.call(%w[common])

class Multi
  include DRC

  def initialize(args = nil)
    if args.nil? || args.empty? || args[0] == "help"
      show_usage
    else
      # Support either ',' or ';' as command delimiter
      # because Genie can't use semicolons, but normalize on ',' for parsing.
      args[0] = args[0] =~ /,/ ? args[0] : args[0].gsub(';', ',')
      commands = args[0].split(',').map(&:strip)
      # in case the user puts the num of times at the end instead of the beginning
      num = commands[0] =~ /^\d+$/ ? commands.shift.to_i : commands.pop.to_i
      num.times {
        commands.each { |command|
          # To run a script, prefix its name with either a semicolon ; or a colon :
          # Genie users will need to use a colon : because smicolons ; are stripped.
          # To specify arguments for the script, include a spaces between them.
          waitrt?
          if command !~ /^[;:]/ then
            fput(command)
          else
            # Identify the name and arguments of the script to call.
            script_name_and_args = command[1..-1].split(' ')
            script_name = script_name_and_args[0]
            script_args = script_name_and_args[1..-1]
            DRC.wait_for_script_to_complete(script_name, script_args)
          end
        }
      }
    end

  end

  def show_usage
    DRC.message("For usage, see https://elanthipedia.play.net/Lich_script_repository#multi")
  end

end

Multi.new(script.vars)
