custom_require.call(%w[common common-crafting common-items])

class Cards

  def initialize
    arg_definitions = [
      [
        { name: 'script_summary', optional: true, description:'***
    YAML SETTINGS:
    card_bags:
      fresh: bag1
      duplicates: bag2

    Fresh bag (bag1) contains unsorted, newly collected cards. This is where script gets cards for sorting.
    Duplicates bag(bag2) holds anything that doesn\'t fit in the collector\'s case. This also holds collector\'s case.
    ***'}
      ]
    ]

    args = parse_args(arg_definitions)
    @settings = get_settings
    @card_bag = @settings.card_bags
    
    DRCI.stow_hands
    cards_add
  end

  def cards_add
    unless /referring/i =~ DRC.bput("get my collector case", 'You get', 'You are already', 'What were you referring to')
      DRC.bput('swap', 'You move') unless DRC.right_hand == "collector's case"
      loop do
        unless /referring/i =~ DRC.bput("get card from my #{@card_bag['fresh']}", 'You get', 'What were you referring')
          next unless /You don't have room/i =~ DRC.bput('cards add', 'You slide', "You don't have room")
          DRC.bput("put my card in my #{@card_bag['duplicates']}", 'You put')
          next
        end
        break
      end
      DRC.bput('cards count', 'You have')
      DRC.bput("put my case in my #{@card_bag['duplicates']}", 'You put')
    end
  end
end

Cards.new