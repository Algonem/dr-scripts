=begin
  Documentation:  Tessera script based upon concept around Almanac.lic.
=end

custom_require.call(%w[common common-items drinfomon])

class Tessera

  def initialize
    settings = get_settings
    tessera_retry_interval = settings.tessera_retry_interval

    UserVars.tessera_last_use ||= Time.now - tessera_retry_interval
    @no_use_scripts = settings.tessera_no_use_scripts 
    @tessera = settings.tessera_noun

    DRC.message("Startup Options: [Retry Interval: every #{tessera_retry_interval} (seconds)], [tessera_noun: #{@tessera}]")

    passive_loop
  end

  def use_tessera
    settings = get_settings
    tessera_retry_interval = settings.tessera_retry_interval

    return if Time.now - UserVars.tessera_last_use < tessera_retry_interval
    return if @no_use_scripts.any? { |name| Script.running?(name) }
    return if XMLData.room_title.include? 'Carousel Chamber'
    return if XMLData.room_title.include? 'Carousel Booth'
    return if XMLData.room_title.include? 'Family Vault'
    return if hidden?
    return if checkleft

    pause 1 until pause_all
    waitrt?
    DRC.bput('retreat', 'You get', 'You retreat', 'You are already')
    waitrt?
    DRC.bput('retreat', 'You get', 'You retreat', 'You are already')
    waitrt?
    case DRC.bput("get my #{@tessera}", 'You get', 'What were', 'You are already', 'You need a free')
    when 'What were'
      echo('Tessera not found, exiting.')
      unpause_all
      exit
    when 'You need a free'
      unless DRCI.in_hands?(@tessera)
        unpause_all
        return
      end
    end
    DRC.bput("ask my #{@tessera} about invest", 'You send your')
    waitrt?
    DRC.bput("stow my #{@tessera}", 'You put', 'Stow what', 'You hold out')
    UserVars.tessera_last_use = Time.now
    unpause_all
  end

  def passive_loop
    loop do
      use_tessera
      pause 20
    end
  end
end

Tessera.new
