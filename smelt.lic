=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#smelt
=end

custom_require.call(%w[common common-crafting common-items])

class Smelt

  def initialize

    arg_definitions = [
      [
        { name: 'refine', regex: /refine/i, optional: true }
      ]
    ]

    args = parse_args(arg_definitions)

    @settings = get_settings
    @bag = @settings.crafting_container
    @bag_items = @settings.crafting_items_in_container
    @belt = @settings.forging_belt
    @rod = @settings.forging_tools.find { |item| /rod/ =~ item }
    @adjustable_tongs = @settings.adjustable_tongs
    DRCI.stow_hands

    DRCC.get_crafting_item(@rod, @bag, @bag_items, @belt)
    if args.refine
      DRCC.get_crafting_item('flux', @bag, @bag_items, @belt)
      @command = "pour my flux in crucible"
      @item = "flux"
    else
      @command = "stir crucible with my rod"
      @item = "rod"
    end
    work
    DRCC.stow_crafting_item(@rod, @bag, @belt)
  end

  def work
    loop do
      case DRC.bput(@command, 'Pour what', 'You can only mix a crucible', 'clumps of molten metal', 'flickers and is unable to consume', 'needs more fuel', 'needs some more fuel', 'think pushing that would have any effect', 'roundtime')
      when 'Pour what'
        DRC.message("Missing Flux")
        break
      when 'You can only mix a crucible'
        break
      when 'clumps of molten metal'
        @command = "turn crucible with my rod"
        @item = "rod"
      when 'flickers and is unable to consume'
        DRCC.stow_crafting_item(@item, @bag, @belt) if DRCI.in_left_hand?(@item)
        DRCC.get_crafting_item('bellows', @bag, @bag_items, @belt)
        @command = "push my bellows"
        @item = "bellows"
      when 'needs more fuel', 'needs some more fuel'
        DRCC.stow_crafting_item(@item, @bag, @belt) if DRCI.in_left_hand?(@item)
        if @adjustable_tongs && DRCC.get_adjust_tongs('shovel', @bag, @bag_items, @belt, @adjustable_tongs) #yaml setting true AND tongs actually adjustable
          @command = "push fuel with my tongs"
          @item = "tongs"
        elsif @adjustable_tongs #yaml setting incorrect
          @adjustable_tongs = false
          DRCC.get_crafting_item('shovel', @bag, @bag_items, @belt)
          @command = "push fuel with my shovel"
          @item = "shovel"
        else                    #yaml setting false
          DRCC.get_crafting_item('shovel', @bag, @bag_items, @belt)
          @command = "push fuel with my shovel"
          @item = "shovel"
        end
      when 'think pushing that would have any effect'
        DRC.bput('adjust my tongs', 'alongside the tong')
      else
        DRCC.stow_crafting_item(@item, @bag, @belt) if DRCI.in_left_hand?(@item)
        waitrt? #waits for messaging so that it doesn't skip the flag
        @command = "stir crucible with my rod"
        @item = "rod"
      end
    end
  end
end

Smelt.new