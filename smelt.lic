=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#smelt
=end

custom_require.call(%w[common common-crafting common-items])

class Smelt

  def initialize
    DRCI.stow_hands

    arg_definitions = [
      [
        { name: 'refine', regex: /refine/i, optional: true }
      ]
    ]

    args = parse_args(arg_definitions)

    @settings = get_settings
    @bag = @settings.crafting_container
    @bag_items = @settings.crafting_items_in_container
    @belt = @settings.forging_belt
    @rod = @settings.forging_tools.find { |item| /rod/ =~ item }
    @adjustable_tongs = @settings.adjustable_tongs

    Flags.add('ingot-done', 'At last the metal appears to be thoroughly mixed')

    DRCC.get_crafting_item(@rod, @bag, @bag_items, @belt)
    if args.refine
      DRCC.get_crafting_item('flux', @bag, @bag_items, @belt)
      work("pour my flux in crucible", "flux", true)
    else
      work("stir crucible with my rod", "rod", false)
    end
    DRCC.stow_crafting_item(@rod, @bag, @belt)
  end

  def work(command, item, stow)
    loop do
      break if Flags['ingot-done']
      case DRC.bput(command, 'Pour what', 'You can only mix a crucible', 'clumps of molten metal', 'flickers and is unable to consume', 'needs more fuel', 'needs some more fuel', 'roundtime')
      when 'Pour what'
        DRC.message("Missing Flux")
        break
      when 'You can only mix a crucible'
        break
      when 'clumps of molten metal'
        DRCC.stow_crafting_item(@item, @bag, @belt) if DRCI.in_left_hand?(@item)
        @command = "turn crucible with my rod"
        @item = "rod"
        @stow = false
      when 'flickers and is unable to consume'
        DRCC.stow_crafting_item(@item, @bag, @belt) if DRCI.in_left_hand?(@item)
        DRCC.get_crafting_item('bellows', @bag, @bag_items, @belt)
        @command = "push my bellows"
        @item = "bellows"
        @stow = true
      when 'needs more fuel', 'needs some more fuel'
        DRCC.stow_crafting_item(@item, @bag, @belt) if DRCI.in_left_hand?(@item)
        if @adjustable_tongs && DRCC.get_adjust_tongs('shovel', @bag, @bag_items, @belt, @adjustable_tongs) #yaml setting true AND tongs actually adjustable
          @command = "push fuel with my tongs"
          @item = "tongs"
          @stow = true
        elsif @adjustable_tongs #yaml setting incorrect
          @adjustable_tongs = false
          DRCC.get_crafting_item('shovel', @bag, @bag_items, @belt)
          @command = "push fuel with my shovel"
          @item = "shovel"
          @stow = true
        else                    #yaml setting false
          DRCC.get_crafting_item('shovel', @bag, @bag_items, @belt)
          @command = "push fuel with my shovel"
          @item = "shovel"
          @stow = true
        end
      else
        DRCC.stow_crafting_item(@item, @bag, @belt) if DRCI.in_left_hand?(@item)
        waitrt? #waits for messaging so that it doesn't skip the flag
        @command = "stir crucible with my rod"
        @item = "rod"
        @stow = false
      end
    end
  end
end

before_dying do
  Flags.delete('ingot-done')
end

Smelt.new