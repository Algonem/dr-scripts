custom_require.call(%w[common])

no_pause_all
no_kill_all

no_use_rooms = get_settings.wand_watcher_no_use_rooms
no_use_scripts = ['burgle','go2','athletics']
downtime = DRSkill.getrank('Arcana') < 1400 ? (60 - DRSkill.getrank('Arcana')/24)*60 : 0
timer = 3600 + downtime
next_invoke = Time.now

arg_definitions = [[
      { name: 'once', regex: /once/i, optional: true, description: "One activation, however long that takes"},
      { name: 'try', regex: /try/i, optional: true, description: "One ATTEMPT at activation, regardless of success or failure, and does not continue attempting"},
      { name: 'script_summary', optional: true, description: "Approximate downtime on your Heroic Tattoo is : #{downtime/60} minutes"},
      { name: 'script_summary', optional: true, description: "Attempts will be made every 5 minutes to activate a tattoo on cooldown, or 5 minutes plus your downtime if tattoo currently active"}
]]
args = parse_args(arg_definitions)

pause 5
loop do
    while next_invoke > Time.now || no_use_scripts.any? { |name| Script.running?(name) } || ( no_use_rooms.any? { |room| room === DRRoom.title.to_s()[2..-3] || room == Room.current.id} )
        pause 15
    end
    scripts = DRC.smart_pause_all

    case DRC.bput("invoke my tattoo",
        'as its magic washes over you',
        'Its magic appears depleted',
        'already under a heroic effect',
        'Closing your eyes, you carefully bend')
    when 'as its magic washes over you'
        next_invoke = Time.now + timer
        DRC.message("Next attempt in #{(next_invoke - Time.now).to_i/60} minutes")
        break if args.once
    when 'Its magic appears depleted'
        next_invoke = Time.now + [300,downtime].min
        DRC.message("Next attempt in #{(next_invoke - Time.now).to_i/60} minutes")
    when 'already under a heroic effect'
        next_invoke = Time.now + (300 + downtime)
        DRC.message("Next attempt in #{(next_invoke - Time.now).to_i/60} minutes")
    when 'Closing your eyes, you carefully bend'
        DRC.message("Your tattoo is NOT a heroic tattoo, exiting for your safety")
        fput('release spell')
        DRC.unpause_all_list(scripts)
        exit
    end
    DRC.unpause_all_list(scripts)
    break if args.try
end