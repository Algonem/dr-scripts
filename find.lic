=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#find
=end

custom_require.call(%w[common-travel])

class Find

  def setup
    arg_definitions = [
      [
        { name: 'npc', regex: /\w+/, description: 'Unique name/noun of the NPC to find' },
        { name: 'follow', regex: /follow/i, optional: true, description: 'Follow the NPC once it is found' }
      ]
    ]

    args = parse_args(arg_definitions, true)

    @npc = args.npc
    @follow = args.follow
    @rooms = get_rooms(args.npc)
  end

  def get_rooms(npc)
    town_search_data = get_data('find')
    case npc
    when /ozursus/i
      town_search_data['Asemath Academy'].rooms
    when /shaman/i
      town_search_data['Dirge'].rooms
    when /theurgist/i
      town_search_data['Shard'].rooms
    when /monk/i
      town_search_data['Pilgrimage Trail'].rooms
    else
      town_search_data['Crossing'].rooms
    end
  end

  def initialize
    setup

    start_index = @rooms.index(Room.current.id) || 0
    search(@rooms.rotate(start_index)) unless found?

    follow if @follow
  end

  def search(room_ids)
    return if room_ids.any? do |room_id|
      DRCT.walk_to(room_id)
      found?
    end

    DRC.message("***STATUS*** Failed to find an NPC named '#{@npc}', there might be a room missing from the search path")
    exit
  end

  def follow
    DRC.message("***STATUS*** Following '#{@npc}' until you ;k find")
    loop do
      pause 1
      next if found?
      DRC.message("***STATUS*** '#{@npc}' has moved; searching adjacent rooms")
      search(Room.current.wayto.keys)
    end
  end

  def found?
    DRRoom.npcs.any? { |room_npc| room_npc =~ /\b#{@npc}\b/i }
  end
end

Find.new unless $_TEST_MODE_
