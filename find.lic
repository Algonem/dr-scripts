=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#find
=end

custom_require.call(%w[common-travel])

class Find

  def initialize
    arg_definitions = [
      [
        { name: 'npc', regex: /\w+/, description: 'Unique name/noun of the NPC to find' },
        { name: 'follow', regex: /follow/i, optional: true, description: 'Follow the NPC once it is found' }
      ]
    ]

    args = parse_args(arg_definitions, true)
    rooms = get_rooms(args.npc)

    if search?(rooms, args.npc)
      follow(args.npc) if args.follow
    end
  end

  def get_rooms(npc)
    town_search_data = get_data('find')
    rooms = []
    case npc
    when /ozursus/i
      rooms = town_search_data['Asemath Academy']['rooms']
    when /shaman/i
      rooms = town_search_data['Dirge']['rooms']
    when /theurgist/i
      rooms = town_search_data['Shard']['rooms']
    when /monk/i
      rooms = town_search_data['Pilgrimage Trail']['rooms']
    else
      rooms = town_search_data['Crossing']['rooms']
    end
    # Start search from the room we're in if it's
    # in our search path, otherwise go to beginning.
    # This also allows you to stop/start a search
    # without always going back to the beginning.
    start_index = rooms.index(Room.current.id) || 0
    rooms.rotate(start_index)
  end

  def search?(room_ids, npc)
    return true if in_room?(npc)
    return true if room_ids.any? do |room_id|
      DRCT.walk_to(room_id)
      in_room?(npc)
    end
    DRC.message("***STATUS*** Failed to find an NPC named '#{npc}', there might be a room missing from the search path")
    false
  end

  def follow(npc)
    DRC.message("***STATUS*** Following '#{npc}' until you ;k find")
    loop do
      pause 1
      next if in_room?(npc)
      DRC.message("***STATUS*** '#{npc}' has moved; searching adjacent rooms")
      break unless search?(Room.current.wayto.keys, npc)
    end
  end

  def in_room?(npc)
    DRRoom.npcs.any? { |room_npc| room_npc =~ /\b#{npc}\b/i }
  end
end

# Don't auto-run during unit tests
Find.new unless $_TEST_MODE_
